/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: battery.proto */

#ifndef PROTOBUF_C_battery_2eproto__INCLUDED
#define PROTOBUF_C_battery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Battery__Stat Battery__Stat;


/* --- enums --- */

typedef enum _Battery__OffReason {
  BATTERY__OFF_REASON__OFF_PLACEHOLDER = 0,
  BATTERY__OFF_REASON__OFF_NO_POWER = 1,
  BATTERY__OFF_REASON__OFF_SWITCHED_OFF_POWER = 2,
  BATTERY__OFF_REASON__OFF_SWITCHED_OFF_REGISTER = 4,
  BATTERY__OFF_REASON__OFF_REMOTE_INPUT = 8,
  BATTERY__OFF_REASON__OFF_PROTECTION = 16,
  BATTERY__OFF_REASON__OFF_PAYGO = 32,
  BATTERY__OFF_REASON__OFF_BMS = 64,
  BATTERY__OFF_REASON__OFF_ENGINE_SHUTDOWN = 128,
  BATTERY__OFF_REASON__OFF_ANALYSING_INPUT = 256
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BATTERY__OFF_REASON)
} Battery__OffReason;
typedef enum _Battery__Error {
  BATTERY__ERROR__ERROR_NONE = 0,
  BATTERY__ERROR__ERROR_BATTERY_VOLTAGE_HIGH = 2,
  BATTERY__ERROR__ERROR_CHARGER_TEMP_HIGH = 17,
  BATTERY__ERROR__ERROR_CHARGER_CURRENT_HIGH = 18,
  BATTERY__ERROR__ERROR_CHARGER_CURRENT_REVERSED = 19,
  BATTERY__ERROR__ERROR_BULK_TIME_LIMIT_EXCEEDED = 20,
  BATTERY__ERROR__ERROR_CURRENT_SENSOR_ISSUE = 21,
  BATTERY__ERROR__ERROR_TERMINALS_OVERHEATED = 26,
  BATTERY__ERROR__ERROR_CONVERTER_ISSUE = 28,
  BATTERY__ERROR__ERROR_SOLAR_VOLTAGE_HIGH = 33,
  BATTERY__ERROR__ERROR_SOLAR_CURRENT_HIGH = 34,
  BATTERY__ERROR__ERROR_SHUTDOWN_BATTERY_VOLTAGE = 38,
  BATTERY__ERROR__ERROR_SHUTDOWN_CURRENT_FLOW = 39,
  BATTERY__ERROR__ERROR_LOST_COMMUNICATION = 65,
  BATTERY__ERROR__ERROR_SYNC_CONFIGURATION = 66,
  BATTERY__ERROR__ERROR_BMS_CONNECTION = 67,
  BATTERY__ERROR__ERROR_NETWORK_CONFIG = 68,
  BATTERY__ERROR__ERROR_FACTORY_CALIBRATION = 116,
  BATTERY__ERROR__ERROR_BAD_FIRMWARE = 117,
  BATTERY__ERROR__ERROR_SETTINGS_INVALID = 119
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BATTERY__ERROR)
} Battery__Error;
typedef enum _Battery__State {
  BATTERY__STATE__STATE_OFF = 0,
  BATTERY__STATE__STATE_FAULT = 2,
  BATTERY__STATE__STATE_BULK = 3,
  BATTERY__STATE__STATE_ABSORPTION = 4,
  BATTERY__STATE__STATE_FLOAT = 5,
  BATTERY__STATE__STATE_EQUALIZE_MANUAL = 7,
  BATTERY__STATE__STATE_STARTING_UP = 245,
  BATTERY__STATE__STATE_EQUALIZE_AUTO = 247,
  BATTERY__STATE__STATE_EXTERNAL_CONTROL = 252
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BATTERY__STATE)
} Battery__State;
typedef enum _Battery__Mode {
  BATTERY__MODE__MODE_OFF = 0,
  BATTERY__MODE__MODE_LIMITED = 1,
  BATTERY__MODE__MODE_ACTIVE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BATTERY__MODE)
} Battery__Mode;

/* --- messages --- */

struct  _Battery__Stat
{
  ProtobufCMessage base;
  uint32_t timestamp;
  /*
   * IL
   */
  uint32_t current;
  /*
   * LOAD
   */
  protobuf_c_boolean load;
  /*
   * T -- maybe not there?
   */
  uint32_t battery_temperature;
  /*
   * RELAY
   */
  protobuf_c_boolean relay;
  /*
   * OR
   */
  Battery__OffReason off_reason;
  /*
   * H19
   */
  uint32_t yield_total;
  /*
   * H20
   */
  uint32_t yield_today;
  /*
   * H21
   */
  uint32_t max_power_today;
  /*
   * H22
   */
  uint32_t yield_yesterday;
  /*
   * H23
   */
  uint32_t max_power_yesterday;
  /*
   * ERR
   */
  Battery__Error error;
  /*
   * CS
   */
  Battery__State state;
  /*
   * FW
   */
  char *firmware_version;
  /*
   * PID
   */
  char *product_id;
  /*
   * SER#
   */
  char *serial_number;
  /*
   * HSDS
   */
  uint32_t day_number;
  /*
   * MPTT
   */
  Battery__Mode mode;
};
#define BATTERY__STAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&battery__stat__descriptor) \
    , 0, 0, 0, 0, 0, BATTERY__OFF_REASON__OFF_PLACEHOLDER, 0, 0, 0, 0, 0, BATTERY__ERROR__ERROR_NONE, BATTERY__STATE__STATE_OFF, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, BATTERY__MODE__MODE_OFF }


/* Battery__Stat methods */
void   battery__stat__init
                     (Battery__Stat         *message);
size_t battery__stat__get_packed_size
                     (const Battery__Stat   *message);
size_t battery__stat__pack
                     (const Battery__Stat   *message,
                      uint8_t             *out);
size_t battery__stat__pack_to_buffer
                     (const Battery__Stat   *message,
                      ProtobufCBuffer     *buffer);
Battery__Stat *
       battery__stat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   battery__stat__free_unpacked
                     (Battery__Stat *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Battery__Stat_Closure)
                 (const Battery__Stat *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    battery__off_reason__descriptor;
extern const ProtobufCEnumDescriptor    battery__error__descriptor;
extern const ProtobufCEnumDescriptor    battery__state__descriptor;
extern const ProtobufCEnumDescriptor    battery__mode__descriptor;
extern const ProtobufCMessageDescriptor battery__stat__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_battery_2eproto__INCLUDED */
