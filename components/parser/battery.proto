syntax = "proto3";
package battery;

enum OffReason {
  OFF_PLACEHOLDER = 0;
  OFF_NO_POWER = 1;
  OFF_SWITCHED_OFF_POWER = 2;
  OFF_SWITCHED_OFF_REGISTER = 4;
  OFF_REMOTE_INPUT = 8;
  OFF_PROTECTION = 16;
  OFF_PAYGO = 32;
  OFF_BMS = 64;
  OFF_ENGINE_SHUTDOWN = 128;
  OFF_ANALYSING_INPUT = 256;
};


enum Error {
  ERROR_NONE = 0;
  ERROR_BATTERY_VOLTAGE_HIGH = 2;
  ERROR_CHARGER_TEMP_HIGH = 17;
  ERROR_CHARGER_CURRENT_HIGH = 18;
  ERROR_CHARGER_CURRENT_REVERSED = 19;
  ERROR_BULK_TIME_LIMIT_EXCEEDED = 20;
  ERROR_CURRENT_SENSOR_ISSUE = 21;
  ERROR_TERMINALS_OVERHEATED = 26;
  ERROR_CONVERTER_ISSUE = 28;
  ERROR_SOLAR_VOLTAGE_HIGH = 33;
  ERROR_SOLAR_CURRENT_HIGH = 34;
  ERROR_SHUTDOWN_BATTERY_VOLTAGE = 38;
  ERROR_SHUTDOWN_CURRENT_FLOW = 39;
  ERROR_LOST_COMMUNICATION = 65;
  ERROR_SYNC_CONFIGURATION = 66;
  ERROR_BMS_CONNECTION = 67;
  ERROR_NETWORK_CONFIG = 68;
  ERROR_FACTORY_CALIBRATION = 116;
  ERROR_BAD_FIRMWARE = 117;
  ERROR_SETTINGS_INVALID = 119;
};

enum State {
  STATE_OFF = 0;
  STATE_FAULT = 2;
  STATE_BULK = 3;
  STATE_ABSORPTION = 4;
  STATE_FLOAT = 5;
  STATE_EQUALIZE_MANUAL = 7;
  STATE_STARTING_UP = 245;
  STATE_EQUALIZE_AUTO = 247;
  STATE_EXTERNAL_CONTROL = 252;
};

enum Mode {
  MODE_OFF = 0;
  MODE_LIMITED = 1;
  MODE_ACTIVE = 2;
};

message Stat {
  uint32 timestamp = 1;
  uint32 current = 2; // IL
  bool has_current = 3;
  bool load = 4; // LOAD
  bool has_load = 5;
  uint32 battery_temperature = 6; // T -- maybe not there?
  bool has_battery_temperature = 7;
  bool relay = 8; // RELAY
  bool has_relay = 9;
  OffReason off_reason = 10; // OR
  bool has_off_reason = 11;
  uint32 yield_total = 12; // H19
  bool has_yield_total = 13;
  uint32 yield_today = 14; // H20
  bool has_yield_today = 15;
  uint32 max_power_today = 16; // H21
  bool has_max_power_today = 17;
  uint32 yield_yesterday = 18; // H22
  bool has_yield_yesterday = 19;
  uint32 max_power_yesterday = 20; // H23
  bool has_max_power_yesterday = 21;
  Error error = 22; // ERR
  bool has_error = 23;
  State state = 24; // CS
  bool has_state = 25;
  string firmware_version = 26; // FW
  bool has_firmware_version = 27;
  string product_id = 28; // PID
  bool has_product_id = 29;
  string serial_number = 30; // SER#
  bool has_serial_number = 31;
  uint32 day_number = 32; // HSDS
  bool has_day_number = 33;
  Mode mode = 34; // MPTT
  bool has_mode = 35;
}